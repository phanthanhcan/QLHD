@model IEnumerable<HopDongMgr.Models.TK_TrangChu_Result>

@{
    ViewBag.Title = "TRANG CHỦ";
}

@*@foreach (var item in Model)
{
    <div class="col-lg-3 col-xs-6">
        <div class="@item.Class">
            <div class="inner">
                <h3>@item.SoLuong</h3>
                <p>@item.TenThongKe</p>
            </div>
            <div class="icon">
                <i class="@item.Icon"></i>
            </div>
            <a data-parameter="@item.DuongDan" id="'@item.TenThongKe'" class="small-box-footer">
                Chi tiết <i class="fa fa-arrow-circle-right"></i>
            </a>
        </div>
    </div>
}
<div class="modal fade in" id="modal-chitiet">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body" id="tableChiTiet">
            </div>
        </div>
    </div>
</div>
<div class="col-md-6">
    <!-- AREA CHART -->
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Biểu đồ thời gian tổng số sự không phù hợp</h3>

            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
            </div>
        </div>
        <div class="box-body">
            <div class="chart">
                <canvas id="myLineChart" style="height: 250px; width: 510px;" height="250" width="510"></canvas>
            </div>
        </div>
        <!-- /.box-body -->
    </div>
    <!-- /.box -->
</div>
<div class="col-md-6">
    <!-- PIE CHART -->
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Biểu đồ phần trăm sự không phù hợp theo loại</h3>

            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
            </div>
        </div>
        <div class="box-body">
            <div class="chart">
                <canvas id="pieChart" style="height: 250px; width: 510px;" height="250" width="510"></canvas>
            </div>

        </div>
        <!-- /.box-body -->
    </div>
    <!-- /.box -->
</div>*@

<div class="clearfix"></div>
<script>
    $(function () {
        //modal
        $(".small-box-footer").click(function () {
            var loai = $(this).attr("data-parameter");
            var ten = $(this).attr("id");
            //ajax
            $.ajax({
                url: '@Url.Action("ChiTiet")',
                type: "GET",
                data: { loaiKPH: loai, tenKPH: ten },
                success: function (data) {
                    $(".modal-title").text(ten.replace(/'/g, ''));
                    $('#tableChiTiet').html(data);
                },
                error: function (xhr) {
                    console.log("error: " + " status: " + status + " er:");
                }
            });

            $('#modal-chitiet').modal({
                show: true
            });
        });

        drawLineChart();

        drawPieChart();
    });

    function drawPieChart() {
        var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
        var pieChart = new Chart(pieChartCanvas);
        $.ajax({
            url: '@Url.Action("PieChartData")',
            dataType: 'json',
        }).done(function (results) {        
            var pieOptions = {
                //Boolean - Whether we should show a stroke on each segment
                segmentShowStroke: true,
                //String - The colour of each segment stroke
                segmentStrokeColor: "#fff",
                //Number - The width of each segment stroke
                segmentStrokeWidth: 2,
                //Number - The percentage of the chart that we cut out of the middle
                percentageInnerCutout: 50, // This is 0 for Pie charts
                //Number - Amount of animation steps
                animationSteps: 100,
                //String - Animation easing effect
                animationEasing: "easeOutBounce",
                //Boolean - Whether we animate the rotation of the Doughnut
                animateRotate: true,
                //Boolean - Whether we animate scaling the Doughnut from the centre
                animateScale: false,
                //Boolean - whether to make the chart responsive to window resizing
                responsive: true,
                // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio: true,
                //String - A legend template
                legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
            };
            //Create pie or douhnut chart
            // You can switch between pie and douhnut using the method below.
            var myPieChart = pieChart.Doughnut(results, pieOptions);
        });
    };

    function drawLineChart() {
        //// Add a helper to format timestamp data
        //Date.prototype.formatMMDDYYYY = function () {
        //    return (this.getMonth() + 1) +
        //    "/" + this.getDate() +
        //    "/" + this.getFullYear();
        //}

        $.ajax({
            url: '@Url.Action("ChartData")',
            dataType: 'json',
        }).done(function (results) {
            // Split timestamp and data into separate arrays
            var labels = [], data = [];
            results.forEach(function (packet) {
                labels.push(packet.label);
                data.push(parseFloat(packet.value));
            });

            // Create the chart.js data structure using 'labels' and 'data'
            var tempData = {
                labels: labels,
                datasets: [{
                    fillColor: "rgba(60,141,188,0.9)",
                    strokeColor: "rgba(60,141,188,0.8)",
                    pointColor: "#3b8bba",
                    pointStrokeColor: "rgba(60,141,188,1)",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(60,141,188,1)",
                    data: data
                }]
            };

            var areaChartOptions = {
                //Boolean - If we should show the scale at all
                showScale: true,
                //Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines: false,
                //String - Colour of the grid lines
                scaleGridLineColor: "rgba(0,0,0,.05)",
                //Number - Width of the grid lines
                scaleGridLineWidth: 1,
                //Boolean - Whether to show horizontal lines (except X axis)
                scaleShowHorizontalLines: true,
                //Boolean - Whether to show vertical lines (except Y axis)
                scaleShowVerticalLines: true,
                //Boolean - Whether the line is curved between points
                bezierCurve: true,
                //Number - Tension of the bezier curve between points
                bezierCurveTension: 0.3,
                //Boolean - Whether to show a dot for each point
                pointDot: false,
                //Number - Radius of each point dot in pixels
                pointDotRadius: 4,
                //Number - Pixel width of point dot stroke
                pointDotStrokeWidth: 1,
                //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                pointHitDetectionRadius: 20,
                //Boolean - Whether to show a stroke for datasets
                datasetStroke: true,
                //Number - Pixel width of dataset stroke
                datasetStrokeWidth: 2,
                //Boolean - Whether to fill the dataset with a color
                datasetFill: true,
                //String - A legend template
                legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
                //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                maintainAspectRatio: true,
                //Boolean - whether to make the chart responsive to window resizing
                responsive: true
            };

            // Get the context of the canvas element we want to select
            var ctx = document.getElementById("myLineChart").getContext("2d");

            // Instantiate a new chart
            var myLineChart = new Chart(ctx).Line(tempData, areaChartOptions);
        });
    }
</script>
@section scripts
{
    <script type="text/javascript">
        var url = '@Url.Action("Index", "CN_HopDong")';
        window.location.href = url;
    </script>
}