@using HopDongMgr.Class.ViewModel;
@using HopDongMgr.Models;
@model HopDongMgr.Class.ViewModel.ListPhanQuyenViewModel

<div class="row">
    <input type="hidden" id="idNhom" value="@ViewBag.IdNhom" />

    <div>
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="btn selected active"><a href="#action_tab" aria-controls="Action" role="tab" aria-expanded="true" data-toggle="tab">Action</a></li>
            <li role="presentation" class="btn"><a href="#menu_tab" aria-controls="Menu" role="tab" data-toggle="tab">Menu</a></li>
        </ul>

        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="action_tab">
                <button type="submit" id="btnPhanQuyen" class="btn btn-primary">Lưu</button>

                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Controller</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var list = Model.listPQ;
                            var listGroup = list.Where(s => s.IsMenu == false)
                                                .GroupBy(u => u.TenController)
                                                .Select(grp => new { GroupID = grp.Key, list = grp.ToList() })
                                                .ToList();

                            for (var i = 0; i < listGroup.Count; i++)   
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(m => listGroup[i].GroupID)
                                    </td>

                                    @{
                                        var listDetail = listGroup[i].list;

                                        <td>
                                            @for (int j = 0; j < listDetail.Count; j++)
                                            {
                                                if (j % 1 == 0 && j != 0)
                                                {
                                                    <br />
                                                }

                                                if (listDetail[j].boolUsed)
                                                {
                                                    <input type="checkbox" class="checkBoxPQ" data-id="@listDetail[j].oid" checked /> @listDetail[j].TenMenu
                                                }
                                                else
                                                {
                                                    <input type="checkbox" class="checkBoxPQ" data-id="@listDetail[j].oid" /> @listDetail[j].TenMenu
                                                }
                                            }
                                        </td>
                                    }
                                </tr>
                                        }
                        }
                    </tbody>
                </table>
            </div>
            <div role="tabpanel" class="tab-pane" id="menu_tab">
                <button type="submit" id="btnPhanQuyenMenu" class="btn btn-danger">Lưu</button>

                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Controller</th>
                            <th>Menu</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var listMenu = Model.listPQ;
                            var listGroupMenu = listMenu.Where(s => s.IsMenu == true)
                                                .GroupBy(u => u.TenController)
                                                .Select(grp => new { GroupID = grp.Key, listMenu = grp.ToList() })
                                                .ToList();

                            for (var i = 0; i < listGroupMenu.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(m => listGroupMenu[i].GroupID)
                                    </td>
                                    @{
                                        var listDetailMenu = listGroupMenu[i].listMenu;

                                        <td>
                                            @for (int j = 0; j < listDetailMenu.Count; j++)
                                            {
                                                if (j % 1 == 0 && j != 0)
                                                {
                                                    <br />
                                                }

                                                if (listDetailMenu[j].boolUsed)
                                                {
                                                    <input type="checkbox" class="checkBoxPQMenu" data-id="@listDetailMenu[j].oid" checked /> @listDetailMenu[j].TenMenu
                                                }
                                                else
                                                {
                                                    <input type="checkbox" class="checkBoxPQMenu" data-id="@listDetailMenu[j].oid" /> @listDetailMenu[j].TenMenu
                                                }
                                            }
                                        </td>
                                    }
                                </tr>
                                        }
                        }
                    </tbody>
                </table>
            </div>
            <!---->
        </div>
    </div>
</div>
