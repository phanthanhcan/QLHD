@model DM_LoaiHopDong
<table id="ListItem" class="table table-striped">
    <thead>
        <tr role="row">
            <th>@Html.LabelFor(modelItem => modelItem.STT)</th>
            <th>@Html.LabelFor(modelItem => modelItem.IDLoai)</th>
            <th>@Html.LabelFor(modelItem => modelItem.TenLoai)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (DM_LoaiHopDong item in ViewBag.OnePageOfData)
        {
            <tr role="row" id="@item.IDLoai">
                <td>
                    @Html.DisplayFor(modelItem => item.STT)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IDLoai)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TenLoai)
                </td>
            </tr>
        }
    </tbody>

</table>
<div>
    @if (ViewBag.OnePageOfData != null)
    {
        string str = $"Trang {ViewBag.OnePageOfData.PageNumber} trên tổng số {ViewBag.OnePageOfData.PageCount} trang, {ViewBag.OnePageOfData.TotalItemCount} dòng";
        @str
    }
</div>
@if (TempData["Search"] == null) // gan them dieu kien khi sech bang rong
{
    @Html.PagedListPager(
                            list: (IPagedList)ViewBag.OnePageOfData
                            , generatePageUrl: Page => Url.Action("Index", new { Page = Page })
                            , options: PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing
                                (
                                    options: new PagedListRenderOptions
                                    {
                                        ContainerDivClasses = new string[] { "dataTables_paginate ", "paging_simple_numbers", "text-right" },
                                        LiElementClasses = new string[] { "page-item" },
                                        PageClasses = new string[] { "page-link" },
                                    }
                                    , ajaxOptions: new AjaxOptions
                                    {
                                        UpdateTargetId = "DataUpdate",
                                        InsertionMode = InsertionMode.Replace,
                                        HttpMethod = "GET"
                                    }
                                )
                        )

}
else
{
    var Seach = TempData["Search"];
    @Html.PagedListPager(
                            list: (IPagedList)ViewBag.OnePageOfData
                            , generatePageUrl: Page => Url.Action("SeachIndex", new { Page = Page, Seach = Seach })
                            , options: PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing
                                (
                                    options: new PagedListRenderOptions
                                    {
                                        ContainerDivClasses = new string[] { "dataTables_paginate ", "paging_simple_numbers", "text-right" },
                                        LiElementClasses = new string[] { "page-item" },
                                        PageClasses = new string[] { "page-link" },
                                    }
                                    , ajaxOptions: new AjaxOptions
                                    {
                                        UpdateTargetId = "DataUpdate",
                                        InsertionMode = InsertionMode.Replace,
                                        HttpMethod = "GET"
                                    }
                                )
                        )

}
